{"version":3,"sources":["Compenents/DataPoint.js","Compenents/Card.js","Compenents/Submitter.js","App.js","index.js"],"names":["DataPoint","props","className","type","color","value","substring","length","Card","state","data","url","this","urlFront","symbol","urlBack","fetch","then","response","json","obj","mostRecentEntry","Object","keys","setState","onClick","e","onDeleteClick","getCloseColor","React","Component","Submitter","list","val","target","catch","error","currentTarget","getAttribute","search","inputOptions","i","pair","pairSymbol","pairName","push","key","data-key","handleListClick","getList","id","placeholder","onChange","handleChange","onBlur","setTimeout","emptyList","title","App","symbols","inputElement","document","getElementById","searchSymbol","vlalue","cardSymbol","parentElement","filter","inputVal","str","trimStr","match","toUpperCase","formatInput","includes","isValidInput","concat","console","log","cardItems","map","symb","deleteClickHandler","clickHandler","ReactDom","render"],"mappings":"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","file":"static/js/main.24bdbccc.chunk.js","sourcesContent":["import React from 'react'\n\nfunction DataPoint(props) {\n    return (\n        <div className={\"data-point \" + props.type}>\n            <p>{props.type + \":\"}</p>\n            <p\n                className={props.color ? props.color : \"\"}\n            >\n                {props.value ? props.value.substring(0, props.value.length - 2) : \"\"}\n            </p>\n        </div>\n    )\n}\n\nexport default DataPoint;","import React from 'react'\nimport DataPoint from './DataPoint'\n\nclass Card extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            data: false,\n        }\n    }\n\n    componentDidMount() {\n        const url = this.props.urlFront + this.props.symbol + this.props.urlBack;\n        fetch(url)\n            .then(response => response.json())\n            .then(data => {\n                const obj = data[\"Time Series (Daily)\"];\n                if (!obj) return;\n                const mostRecentEntry = obj[Object.keys(obj)[0]];\n                if (mostRecentEntry) {\n                    this.setState(\n                        {\n                            data: mostRecentEntry,\n                        }\n                    )\n                }\n            });\n    }\n\n    getCloseColor() {\n        if (this.state.data[\"1. open\"] > this.state.data[\"4. close\"]) {\n            return \"red\";\n        }\n        else {\n            return \"green\";\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"card\" symbol={this.props.symbol}>\n                <h1>{this.props.symbol}</h1>\n                <div className=\"delete-card-btn\" onClick={(e) => this.props.onDeleteClick(e)}>X</div>\n                <div className=\"cardInfo\">\n                    <DataPoint type=\"Open\" value={this.state.data[\"1. open\"]} />\n                    <DataPoint type=\"High\" value={this.state.data[\"2. high\"]} color=\"green\" />\n                    <DataPoint type=\"Low\" value={this.state.data[\"3. low\"]} color=\"red\" />\n                    <DataPoint type=\"Close\" value={this.state.data[\"4. close\"]} color={this.getCloseColor()} />\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Card;","import React from 'react'\n\nclass Submitter extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            list: false,\n        }\n    }\n    handleChange(e) {\n        const val = e.target.value;\n        if (!val) {\n            this.setState({\n                list: false,\n            })\n            return;\n        }\n        fetch(\"https://ticker-2e1ica8b9.now.sh/keyword/\" + val)\n            .then(response => response.json())\n            .then(data => {\n                this.setState({\n                    list: data,\n                })\n                return;\n            })\n            .catch((error) =>\n                //if search is unsuccesful, set false\n                this.setState({\n                    list: false,\n                })\n            )\n    }\n\n    handleListClick(e) {\n        const symbol = e.currentTarget.getAttribute('data-key');\n        this.props.search(symbol);\n    }\n\n    getList() {\n        const inputOptions = [];\n        if (this.state.list) {\n            for (let i = 0; i < this.state.list.length; i++) {\n                if (i >= 5) break;\n                const pair = this.state.list[i];\n                const pairSymbol = pair[\"symbol\"];\n                const pairName = pair[\"name\"];\n                inputOptions.push(\n                    <li\n                        className=\"input-option\"\n                        key={pairSymbol}\n                        data-key={pairSymbol}\n                        onClick={(e) => this.handleListClick(e)}\n                    >\n                        <div className=\"symbol\">{pairSymbol}</div>\n                        <div className=\"name\">{pairName}</div>\n                    </li>\n                );\n            }\n        }\n        return inputOptions;\n    }\n\n    emptyList() {\n        this.setState({\n            list: false,\n        });\n    }\n\n    render() {\n        const inputOptions = this.getList();\n        return (\n            <div id=\"submitter-container\">\n                <div>\n                    <input\n                        type=\"text\"\n                        placeholder=\"Stock symbol\"\n                        id=\"submitter\"\n                        onChange={(e) => this.handleChange(e)}\n                        onBlur={() => setTimeout(() => this.emptyList(), 500)}\n                    >\n                    </input>\n                    {inputOptions &&\n                        <ul>\n                            {inputOptions}\n                        </ul>\n                    }\n                </div>\n                <button\n                    type=\"button\"\n                    title=\"Add Stock\"\n                    onClick={() => this.props.onClick()}\n                >\n                    +</button>\n            </div>\n        )\n    }\n}\n\nexport default Submitter","import React from 'react'\n\nimport Card from './Compenents/Card'\nimport Submitter from './Compenents/Submitter'\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            symbols: [\"MSFT\", \"AAPL\", \"FB\", \"TSLA\"],\n        }\n    }\n\n    clickHandler() {\n        const inputElement = document.getElementById('submitter');\n        this.searchSymbol(inputElement.vlalue);\n    }\n\n    deleteClickHandler(e) {\n        const cardSymbol = e.target.parentElement.getAttribute('symbol');\n        this.setState({\n            symbols: this.state.symbols.filter((symbol) => { //conserves immutability by not using splice\n                return symbol !== cardSymbol;\n            })\n        });\n    }\n\n    searchSymbol(symbol) {\n        const inputVal = formatInput(symbol);\n        if (!this.state.symbols.includes(inputVal) && this.isValidInput(inputVal)) {\n            this.setState({\n                symbols: this.state.symbols.concat([inputVal]),\n            })\n        }\n        document.getElementById('submitter').value = \"\";\n    }\n\n\n    isValidInput(str) {\n        if (str) {\n            try {\n                fetch(this.props.urlFront + str + this.props.urlBack).then(response => response.json()).then(data => {\n                    if (data[\"Note\"]) {\n                        console.log(\"Too many queries per minute. Max of 5. Sorry, that is all that is available for free\");\n                        return false;\n                    }\n                    if (data[\"Error\"]) {\n                        console.log(data[\"Error:\"])\n                        return false;\n                    }\n                });\n                return true;\n            } catch (error) {\n                console.log('error: ', error);\n                return false;\n            }\n        }\n        return false;\n    }\n\n\n    render() {\n        const cardItems = this.state.symbols.map((symb) =>\n            <Card\n                key={symb}\n                symbol={symb}\n                urlFront={this.props.urlFront}\n                urlBack={this.props.urlBack}\n                onDeleteClick={(e) => this.deleteClickHandler(e)}\n            />\n        )\n        return (\n            <div>\n                <div id='disclaimer'>Disclaimer!<br></br>Max of 5 API queries per minute\n                <p>Sorry, I'm cheap :)</p>\n                </div>\n                <div id='main'>\n                    {cardItems}\n                </div>\n                <Submitter\n                    onClick={() => this.clickHandler()}\n                    search={(symbol) => this.searchSymbol(symbol)}\n                />\n            </div>\n        )\n    }\n}\n\nfunction formatInput(str) {\n    const trimStr = str.match(/([^\\s]+)/)[1];\n    if (trimStr) {\n        return trimStr.toUpperCase();\n    }\n    else {\n        return null;\n    }\n}\n\n\nexport default App;","import React from 'react'\nimport ReactDom from 'react-dom'\nimport App from './App'\n\nimport \"./../node_modules/minireset.css\"\nimport \"./style.css\"\n\nReactDom.render(<App urlFront=\"https://www.alphavantage.co/query?function=TIME_SERIES_DAILY&symbol=\"\n    urlBack=\"&apikey=B6WDTRVM6XVHCW5V\" />, document.getElementById('root'));"],"sourceRoot":""}